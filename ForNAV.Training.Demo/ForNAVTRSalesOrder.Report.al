#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0204, AA0206, AA0218, AA0228, AL0254, AL0424, AS0011, AW0006 // ForNAV settings

Report 70630 "ForNAV TR Sales Order"
{
	Caption = 'TR Sales Order';
	WordLayout = './Layouts/ForNAVSalesOrder.docx'; DefaultLayout = Word;

	dataset
	{
		dataitem(Header;"Sales Header")
		{
			DataItemTableView = sorting("Document Type", "No.") where("Document Type" = CONST(Order));
			RequestFilterFields = "No.";
			column(ReportForNavId_2; 2) {} // Autogenerated by ForNav - Do not delete
			column(ReportForNav_Header; ReportForNavWriteDataItem('Header',Header)) {}
			dataitem("ForNAV TR Table";"ForNAV TR Table")
			{
				DataItemLink = CustomerNo = FIELD("Sell-to Customer No.");
				column(ReportForNavId_4; 4) {} // Autogenerated by ForNav - Do not delete
				column(ReportForNav_ForNAVTRTable; ReportForNavWriteDataItem('ForNAVTRTable',"ForNAV TR Table")) {}
				trigger OnPreDataItem();
				begin
					"ForNAV TR Table".SetView(ReportForNav.OnPreDataItemView('ForNAVTRTable',"ForNAV TR Table"));
				end;
				
			}
			dataitem("ForNAV TR Table2";"ForNAV TR Table")
			{
				DataItemLink = CustomerNo = FIELD("Sell-to Customer No.");
				column(ReportForNavId_6; 6) {} // Autogenerated by ForNav - Do not delete
				column(ReportForNav_ForNAVTRTable2; ReportForNavWriteDataItem('ForNAVTRTable2',"ForNAV TR Table2")) {}
				trigger OnPreDataItem();
				begin
					ReportForNav.OnPreDataItem('ForNAVTRTable2',"ForNAV TR Table2");
				end;
			}
			dataitem(Line;"Sales Line")
			{
				DataItemLink = "Document No." = FIELD("No."), "Document Type" = FIELD("Document Type");
				DataItemTableView = sorting("Document Type", "Document No.", "Line No.");
				column(ReportForNavId_3; 3) {} // Autogenerated by ForNav - Do not delete
				column(ReportForNav_Line; ReportForNavWriteDataItem('Line',Line)) {}
				trigger OnPreDataItem();
				begin
					Line.SetView(ReportForNav.OnPreDataItemView('Line',Line));
				end;
				
			}
			dataitem("Red Ink Text";"Red Ink Text")
			{
				CalcFields = HTML;
				UseTemporary = true;
				column(ReportForNavId_5; 5) {} // Autogenerated by ForNav - Do not delete
				column(ReportForNav_RedInkText; ReportForNavWriteDataItem('RedInkText',"Red Ink Text")) {}
				trigger OnPreDataItem();
				begin
					"Red Ink Text".SetView(ReportForNav.OnPreDataItemView('RedInkText',"Red Ink Text",'Header',Header));
				end;
				
			}
			trigger OnPreDataItem();
			begin
				Header.SetView(ReportForNav.OnPreDataItemView('Header',Header));
			end;
			
			trigger OnAfterGetRecord();
			var
				InkHTMLSplitter: Codeunit "Red Ink HTML Splitter";
			begin
				InkHTMLSplitter.FillHTML("Red Ink Text", Header);
			end;
			
		}
	}
	requestpage
	{
		SaveValues = true;
		layout
		{
		}

	}

	trigger OnInitReport()
	begin
		;ReportsForNavInit;
	end;

	trigger OnPostReport()
	begin



	end;

	trigger OnPreReport()
	begin
		;ReportsForNavPre;
	end;

	// --> Reports ForNAV Autogenerated code - do not delete or modify
	var
		ReportForNav: Codeunit "ForNAV Report Management";
		ReportForNavTotalsCausedBy: Integer;
		ReportForNavInitialized: Boolean;
		ReportForNavShowOutput: Boolean;

	local procedure ReportsForNavInit()
	var
		id: Integer;
		FormatRegion: Text;
	begin
		Evaluate(id, CopyStr(CurrReport.ObjectId(false), StrPos(CurrReport.ObjectId(false), ' ') + 1));
		ReportForNav.OnInit(id);
	end;
	local procedure ReportsForNavPre() begin end;
	local procedure ReportForNavSetTotalsCausedBy(value : Integer) begin ReportForNavTotalsCausedBy := value; end;
	local procedure ReportForNavSetShowOutput(value : Boolean) begin ReportForNavShowOutput := value; end;
	local procedure ReportForNavInit(jsonObject : JsonObject) begin ReportForNav.Init(jsonObject, CurrReport.ObjectId); end;
	local procedure ReportForNavWriteDataItem(dataItemId: Text; rec : Variant) : Text
	var
		values: Text;
		jsonObject: JsonObject;
		currLanguage: Integer;
	begin
		if not ReportForNavInitialized then begin
			ReportForNavInit(jsonObject);
			ReportForNavInitialized := true;
		end;

		case (dataItemId) of
			'Header':
				begin
					CurrReport.Language := ReportForNav.GetLanguageID(Header."Language Code");
					jsonObject.Add('CurrReport$Language$Integer',CurrReport.Language);
				end;
			'ForNAVTRTable':
				begin
					currLanguage := GlobalLanguage; GlobalLanguage := 1033; jsonObject.Add('DataItem$ForNAVTRTable$CurrentKey$Text',"ForNAV TR Table".CurrentKey); GlobalLanguage := currLanguage;
				end;
			'ForNAVTRTable2':
				begin
					currLanguage := GlobalLanguage; GlobalLanguage := 1033; jsonObject.Add('DataItem$ForNAVTRTable2$CurrentKey$Text',"ForNAV TR Table2".CurrentKey); GlobalLanguage := currLanguage;
				end;
			'RedInkText':
				begin
					currLanguage := GlobalLanguage; GlobalLanguage := 1033; jsonObject.Add('DataItem$RedInkText$CurrentKey$Text',"Red Ink Text".CurrentKey); GlobalLanguage := currLanguage;
				end;
		end;
		ReportForNav.AddDataItemValues(jsonObject,dataItemId,rec);
		jsonObject.WriteTo(values);
		exit(values);
	end;
	// Reports ForNAV Autogenerated code - do not delete or modify -->
}
