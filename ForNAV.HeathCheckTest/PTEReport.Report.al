#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0204, AA0206, AA0218, AA0228, AL0254, AL0424, AS0011, AW0006 // ForNAV settings

Report 50100 "PTE Report"
{
    Caption = 'Report';
    WordLayout = './Layouts/PTEReport.docx';
    DefaultLayout = Word;

    dataset
    {
        dataitem(List; Customer)
        {
            column(ReportForNavId_2; 2) { } // Autogenerated by ForNav - Do not delete
            column(ReportForNav_List; ReportForNavWriteDataItem('List', List)) { }
            dataitem("PTE My Table"; "PTE My Table")
            {
#pragma warning disable AL0432
                DataItemLink = "Customer No." = FIELD("No.");
                column(ReportForNavId_3; 3) { } // Autogenerated by ForNav - Do not delete
                column(ReportForNav_PTEMyTable; ReportForNavWriteDataItem('PTEMyTable', "PTE My Table")) { }
                trigger OnPreDataItem();
                begin
                    "PTE My Table".SetView(ReportForNav.OnPreDataItemView('PTEMyTable', "PTE My Table"));
                end;

            }
            dataitem("PTE My Obsolete Table"; "PTE My Obsolete Table")
#pragma warning restore AL0432
            {
                DataItemLink = "Customer No." = FIELD("No.");
                column(ReportForNavId_4; 4) { } // Autogenerated by ForNav - Do not delete
                column(ReportForNav_PTEMyObsoleteTable; ReportForNavWriteDataItem('PTEMyObsoleteTable', "PTE My Obsolete Table")) { }
                trigger OnPreDataItem();
                begin
                    "PTE My Obsolete Table".SetView(ReportForNav.OnPreDataItemView('PTEMyObsoleteTable', "PTE My Obsolete Table"));
                end;

            }
            dataitem("No. Series"; "No. Series")
            {
                DataItemLink = Code = FIELD("No. Series");
                column(ReportForNavId_5; 5) { } // Autogenerated by ForNav - Do not delete
                column(ReportForNav_NoSeries; ReportForNavWriteDataItem('NoSeries', "No. Series")) { }
                trigger OnPreDataItem();
                begin
                    "No. Series".SetView(ReportForNav.OnPreDataItemView('NoSeries', "No. Series"));
                end;

            }
            trigger OnPreDataItem();
            begin
                List.SetView(ReportForNav.OnPreDataItemView('List', List));
            end;

        }
    }
    requestpage
    {
        SaveValues = false;
        layout
        {
        }

    }

    trigger OnInitReport()
    begin
        ;
        ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin



    end;

    trigger OnPreReport()
    begin
        ;
        ReportsForNavPre;
    end;

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        ReportForNav: Codeunit "ForNAV Report Management";
        ReportForNavTotalsCausedBy: Integer;
        ReportForNavInitialized: Boolean;
        ReportForNavShowOutput: Boolean;

    local procedure ReportsForNavInit()
    var
        id: Integer;
        FormatRegion: Text;
    begin
        Evaluate(id, CopyStr(CurrReport.ObjectId(false), StrPos(CurrReport.ObjectId(false), ' ') + 1));
        ReportForNav.OnInit(id);
    end;

    local procedure ReportsForNavPre()
    begin
    end;

    local procedure ReportForNavSetTotalsCausedBy(value: Integer)
    begin
        ReportForNavTotalsCausedBy := value;
    end;

    local procedure ReportForNavSetShowOutput(value: Boolean)
    begin
        ReportForNavShowOutput := value;
    end;

    local procedure ReportForNavInit(jsonObject: JsonObject)
    begin
        ReportForNav.Init(jsonObject, CurrReport.ObjectId);
    end;

    local procedure ReportForNavWriteDataItem(dataItemId: Text; rec: Variant): Text
    var
        values: Text;
        jsonObject: JsonObject;
        currLanguage: Integer;
    begin
        if not ReportForNavInitialized then begin
            ReportForNavInit(jsonObject);
            ReportForNavInitialized := true;
        end;

        case (dataItemId) of
            'List':
                begin
                    currLanguage := GlobalLanguage;
                    GlobalLanguage := 1033;
                    jsonObject.Add('DataItem$List$CurrentKey$Text', List.CurrentKey);
                    GlobalLanguage := currLanguage;
                end;
            'PTEMyTable':
                begin
                    currLanguage := GlobalLanguage;
                    GlobalLanguage := 1033;
                    jsonObject.Add('DataItem$PTEMyTable$CurrentKey$Text', "PTE My Table".CurrentKey);
                    GlobalLanguage := currLanguage;
                end;
            'PTEMyObsoleteTable':
                begin
                    currLanguage := GlobalLanguage;
                    GlobalLanguage := 1033;
                    jsonObject.Add('DataItem$PTEMyObsoleteTable$CurrentKey$Text', "PTE My Obsolete Table".CurrentKey);
                    GlobalLanguage := currLanguage;
                end;
            'NoSeries':
                begin
                    currLanguage := GlobalLanguage;
                    GlobalLanguage := 1033;
                    jsonObject.Add('DataItem$NoSeries$CurrentKey$Text', "No. Series".CurrentKey);
                    GlobalLanguage := currLanguage;
                end;
        end;
        ReportForNav.AddDataItemValues(jsonObject, dataItemId, rec);
        jsonObject.WriteTo(values);
        exit(values);
    end;
    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
